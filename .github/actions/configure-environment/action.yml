name: Configure Environment Variables
description: Configure environment variables for Filecoin FFI

runs:
  using: 'composite'
  steps:
    - if: runner.os == 'Linux' && runner.arch == 'ARM64'
      run: |
        wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/sbsa/cuda-ubuntu2404.pin
        sudo mv cuda-ubuntu2404.pin /etc/apt/preferences.d/cuda-repository-pin-600
        wget https://developer.download.nvidia.com/compute/cuda/12.8.0/local_installers/cuda-repo-ubuntu2404-12-8-local_12.8.0-570.86.10-1_arm64.deb
        sudo dpkg -i cuda-repo-ubuntu2404-12-8-local_12.8.0-570.86.10-1_arm64.deb
        sudo cp /var/cuda-repo-ubuntu2404-12-8-local/cuda-*-keyring.gpg /usr/share/keyrings/
        sudo apt-get update
        sudo apt-get -y install cuda-toolkit-12-8
        sudo mkdir -p /usr/lib/aarch64-linux-gnu/stubs
        sudo ln -s /usr/local/cuda-12.8/lib64/stubs/libcuda.so /usr/lib/aarch64-linux-gnu/stubs/libcuda.so.1
        sudo ln -s /usr/local/cuda-12.8/lib64/stubs/libcuda.so /usr/lib/aarch64-linux-gnu/stubs/libcuda.so
      shell: bash
    - run: |
        echo "FIL_PROOFS_PARAMETER_CACHE=${GITHUB_WORKSPACE}/filecoin-proof-parameters/" >> $GITHUB_ENV
        echo 'GO111MODULE=on' >> $GITHUB_ENV
        echo 'RUST_LOG=info' >> $GITHUB_ENV
        echo "GOPATH=${HOME}/go" >> $GITHUB_ENV
        echo "CARGO_TERM_COLOR=never" >> $GITHUB_ENV
      shell: bash
    - run: |
        echo "/usr/local/go/bin" >> $GITHUB_PATH
        echo "${GOPATH}/bin" >> $GITHUB_PATH
        echo "${HOME}/.cargo/bin" >> $GITHUB_PATH
        echo "${HOME}/.bin" >> $GITHUB_PATH
      shell: bash
    - if: runner.os == 'Linux' && runner.arch == 'ARM64'
      run: |
        echo "LD_LIBRARY_PATH=/usr/lib/aarch64-linux-gnu/stubs:${LD_LIBRARY_PATH}" >> $GITHUB_ENV
        echo "LIBRARY_PATH=/usr/lib/aarch64-linux-gnu/stubs:${LIBRARY_PATH}" >> $GITHUB_ENV
      shell: bash
    - if: runner.os == 'macOS'
      run: |
        echo "CPATH=$(brew --prefix)/include" >> $GITHUB_ENV
        echo "LIBRARY_PATH=$(brew --prefix)/lib" >> $GITHUB_ENV
      shell: bash
    - if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install --no-install-recommends -y valgrind ocl-icd-opencl-dev libssl-dev libhwloc-dev nvidia-cuda-toolkit g++-10 pkgconf
        # Downgrade to GCC 10, as CUDA 11 doesn't play nice with GCC 11
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-10 10
        sudo update-alternatives --set c++ /usr/bin/g++-10
        # Check if we need to install cuda-toolkit-12-5
      shell: bash
    - if: runner.os == 'macOS'
      run: |
        HOMEBREW_NO_AUTO_UPDATE=1 brew install md5sha1sum hwloc
      shell: bash
    - uses: dtolnay/rust-toolchain@21dc36fb71dd22e3317045c0c31a3f4249868b17
      with:
        toolchain: 1.73
    - uses: actions/setup-go@v5
      with:
        go-version: '1.21'
